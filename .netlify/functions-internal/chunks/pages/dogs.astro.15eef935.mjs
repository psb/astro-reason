/* empty css                          */import { c as createAstro, a as createComponent, r as renderTemplate, b as addAttribute, d as renderHead, e as renderSlot, f as renderComponent } from '../astro.3bf5c58e.mjs';
import 'html-escaper';
import * as React from 'react';

const $$Astro$1 = createAstro();
const $$Layout = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
  Astro2.self = $$Layout;
  const { title } = Astro2.props;
  return renderTemplate`<html lang="en">
	<head>
		<meta charset="UTF-8">
		<meta name="description" content="Astro description">
		<meta name="viewport" content="width=device-width">
		<link rel="icon" type="image/svg+xml" href="/favicon.svg">
		<meta name="generator"${addAttribute(Astro2.generator, "content")}>
		<title>${title}</title>
	${renderHead($$result)}</head>
	<body>
		${renderSlot($$result, $$slots["default"])}
	</body></html>`;
}, "/Users/paulbacchus/Work/astro-reason/src/layouts/Layout.astro");

// Generated by Melange


function sub(x, offset, len) {
  var result = new Array(len);
  var j = 0;
  var i = offset;
  while(j < len) {
    result[j] = x[i];
    j = j + 1 | 0;
    i = i + 1 | 0;
  }  return result;
}
/* No side effect */

// Generated by Melange


function app(_f, _args) {
  while(true) {
    var args = _args;
    var f = _f;
    var init_arity = f.length;
    var arity = init_arity === 0 ? 1 : init_arity;
    var len = args.length;
    var d = arity - len | 0;
    if (d === 0) {
      return f.apply(null, args);
    }
    if (d >= 0) {
      return (function(f,args){
      return function (x) {
        return app(f, args.concat([x]));
      }
      }(f,args));
    }
    _args = sub(args, arity, -d | 0);
    _f = f.apply(null, sub(args, 0, arity));
    continue ;
  }}

function _1(o, a0) {
  var arity = o.length;
  if (arity === 1) {
    return o(a0);
  } else {
    switch (arity) {
      case 1 :
          return o(a0);
      case 2 :
          return function (param) {
            return o(a0, param);
          };
      case 3 :
          return function (param, param$1) {
            return o(a0, param, param$1);
          };
      case 4 :
          return function (param, param$1, param$2) {
            return o(a0, param, param$1, param$2);
          };
      case 5 :
          return function (param, param$1, param$2, param$3) {
            return o(a0, param, param$1, param$2, param$3);
          };
      case 6 :
          return function (param, param$1, param$2, param$3, param$4) {
            return o(a0, param, param$1, param$2, param$3, param$4);
          };
      case 7 :
          return function (param, param$1, param$2, param$3, param$4, param$5) {
            return o(a0, param, param$1, param$2, param$3, param$4, param$5);
          };
      default:
        return app(o, [a0]);
    }
  }
}
/* No side effect */

// Generated by Melange


var os_type = (function(_){
  if(typeof process !== 'undefined' && process.platform === 'win32'){
        return "Win32"
  }
  else {
    return "Unix"
  }
});

function caml_sys_executable_name(param) {
  if (typeof process === "undefined") {
    return "";
  }
  var argv = process.argv;
  if (argv == null) {
    return "";
  } else {
    return argv[0];
  }
}
/* No side effect */

// Generated by Melange


var id = {
  contents: 0
};

function create(str) {
  id.contents = id.contents + 1 | 0;
  return str + ("/" + id.contents);
}

function caml_is_extension(e) {
  if (e == null) {
    return false;
  } else {
    return typeof e.RE_EXN_ID === "string";
  }
}
/* No side effect */

// Generated by Melange


function some(x) {
  if (x === undefined) {
    return {
            BS_PRIVATE_NESTED_SOME_NONE: 0
          };
  } else if (x !== null && x.BS_PRIVATE_NESTED_SOME_NONE !== undefined) {
    return {
            BS_PRIVATE_NESTED_SOME_NONE: x.BS_PRIVATE_NESTED_SOME_NONE + 1 | 0
          };
  } else {
    return x;
  }
}

function valFromOption(x) {
  if (!(x !== null && x.BS_PRIVATE_NESTED_SOME_NONE !== undefined)) {
    return x;
  }
  var depth = x.BS_PRIVATE_NESTED_SOME_NONE;
  if (depth === 0) {
    return ;
  } else {
    return {
            BS_PRIVATE_NESTED_SOME_NONE: depth - 1 | 0
          };
  }
}
/* No side effect */

// Generated by Melange


var $$Error = /* @__PURE__ */create("Caml_js_exceptions.Error");

function internalToOCamlException(e) {
  if (caml_is_extension(e)) {
    return e;
  } else {
    return {
            RE_EXN_ID: $$Error,
            _1: e
          };
  }
}
/* No side effect */

// Generated by Melange


function get(dict, k) {
  if ((k in dict)) {
    return some(dict[k]);
  }
  
}
/* No side effect */

// Generated by Melange


caml_sys_executable_name();

os_type();

os_type() === "Unix";

os_type() === "Win32";
/* No side effect */

// Generated by Melange


function _isInteger(value) {
  if (Number.isFinite(value)) {
    return Math.floor(value) === value;
  } else {
    return false;
  }
}

var DecodeError = /* @__PURE__ */create("Json_decode.DecodeError");

function $$float(json) {
  if (typeof json === "number") {
    return json;
  }
  throw {
        RE_EXN_ID: DecodeError,
        _1: "Expected number, got " + JSON.stringify(json),
        Error: new Error()
      };
}

function $$int(json) {
  var f = $$float(json);
  if (_isInteger(f)) {
    return f;
  }
  throw {
        RE_EXN_ID: DecodeError,
        _1: "Expected integer, got " + JSON.stringify(json),
        Error: new Error()
      };
}

function string(json) {
  if (typeof json === "string") {
    return json;
  }
  throw {
        RE_EXN_ID: DecodeError,
        _1: "Expected string, got " + JSON.stringify(json),
        Error: new Error()
      };
}

function field(key, decode, json) {
  if (typeof json === "object" && !Array.isArray(json) && json !== null) {
    var value = get(json, key);
    if (value !== undefined) {
      try {
        return _1(decode, valFromOption(value));
      }
      catch (raw_msg){
        var msg = internalToOCamlException(raw_msg);
        if (msg.RE_EXN_ID === DecodeError) {
          throw {
                RE_EXN_ID: DecodeError,
                _1: msg._1 + ("\n\tat field '" + (key + "'")),
                Error: new Error()
              };
        }
        throw msg;
      }
    } else {
      throw {
            RE_EXN_ID: DecodeError,
            _1: "Expected field '" + key + "'",
            Error: new Error()
          };
    }
  } else {
    throw {
          RE_EXN_ID: DecodeError,
          _1: "Expected object, got " + JSON.stringify(json),
          Error: new Error()
        };
  }
}
/* No side effect */

// Generated by Melange


function decodeFetchResult(json) {
  return {
          message: field("message", string, json),
          status: field("status", string, json)
        };
}

function Dog(Props) {
  var match = React.useReducer((function (state, action) {
          if (action) {
            return {
                    data: action._0,
                    loading: false
                  };
          } else {
            return {
                    data: state.data,
                    loading: true
                  };
          }
        }), {
        data: {
          message: "https://images.dog.ceo/breeds/rottweiler/n02106550_10478.jpg",
          status: "success"
        },
        loading: false
      });
  var dispatch = match[1];
  var state = match[0];
  var loadingImage = function (param) {
    return React.createElement("img", {
                alt: "dog",
                src: "/dog.svg"
              });
  };
  var dogImage = function (data) {
    return React.createElement("img", {
                className: "mx-auto",
                alt: data.status !== "success" ? "error dog" : "dog",
                src: data.status !== "success" ? "/500.jpg" : data.message
              });
  };
  var buttons = function (param) {
    return React.createElement("div", {
                className: "flex justify-around"
              }, React.createElement("a", {
                    className: "rounded-md p-4 mt-2 bg-slate-400 text-white hover:bg-slate-500",
                    href: "/"
                  }, "Home"), React.createElement("button", {
                    className: "rounded-md p-4 mt-2 bg-green-500 text-white hover:bg-green-600",
                    onClick: (function (param) {
                        _1(dispatch, /* Loading */0);
                        var callback = function (data) {
                          _1(dispatch, /* Loaded */{
                                _0: data
                              });
                        };
                        fetch("https://dog.ceo/api/breeds/image/random").then(function (prim) {
                                  return prim.json();
                                }).then(function (json) {
                                var data = decodeFetchResult(json);
                                _1(callback, data);
                                return Promise.resolve(undefined);
                              }).catch(function (err) {
                              console.log("Error", err);
                              _1(callback, {
                                    message: "",
                                    status: "error"
                                  });
                              return Promise.resolve(undefined);
                            });
                      })
                  }, "Fetch another image"));
  };
  return React.createElement("div", {
              className: "container mx-auto max-w-md text-center p-4"
            }, state.loading ? loadingImage() : React.createElement(React.Fragment, undefined, dogImage(state.data), buttons()));
}

var make = Dog;
/* react Not a pure module */

const $$Astro = createAstro();
const $$Dogs = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Dogs;
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "Dogs" }, { "default": ($$result2) => renderTemplate`
  ${renderComponent($$result2, "Dog", make, { "client:load": true, "client:component-hydration": "load", "client:component-path": "/Users/paulbacchus/Work/astro-reason/src/reason_react_output/src/components/Dog.js", "client:component-export": "make" })}
` })}`;
}, "/Users/paulbacchus/Work/astro-reason/src/pages/dogs.astro");

const $$file = "/Users/paulbacchus/Work/astro-reason/src/pages/dogs.astro";
const $$url = "/dogs";

const dogs = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
	__proto__: null,
	default: $$Dogs,
	file: $$file,
	url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

export { $$int as $, _1 as _, $$Layout as a, dogs as d, field as f, string as s };

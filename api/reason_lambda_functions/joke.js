// Generated by Melange

import * as Json from "../node_modules/@glennsl/bs-json/src/Json.js";
import * as Curry from "melange.runtime/curry.js";
import * as Fetch from "melange-fetch/./Fetch.js";
import * as Caml_option from "melange.runtime/caml_option.js";
import * as Json_decode from "../node_modules/@glennsl/bs-json/src/Json_decode.js";

require('isomorphic-fetch')
;

function decodePostBody(json_string) {
  var jc = Json.parse(json_string);
  if (jc !== undefined) {
    return {
            count: Json_decode.field("count", Json_decode.$$int, Caml_option.valFromOption(jc))
          };
  } else {
    return {
            count: 0
          };
  }
}

function decodeFetchResult(json) {
  return {
          joke: Json_decode.field("joke", Json_decode.string, json),
          id: Json_decode.field("id", Json_decode.string, json),
          status: Json_decode.field("status", Json_decode.$$int, json)
        };
}

function handler($$event, _context, callback) {
  var jokeCount = decodePostBody($$event.body);
  console.log("jokeCount", jokeCount);
  return fetch("https://icanhazdadjoke.com/", Curry._2(Fetch.RequestInit.make(/* Get */0, {
                              Accept: "application/json",
                              "User-Agent": "astro-reason (https://github.com/psb/astro-reason)"
                            }, undefined, undefined, undefined, undefined)(undefined, undefined, undefined, undefined, undefined), undefined, undefined)).then(function (prim) {
                  return prim.json();
                }).then(function (json) {
                console.log("json", json);
                var data = decodeFetchResult(json);
                var body = JSON.stringify({
                      joke: data.joke,
                      count: jokeCount.count + 1 | 0,
                      status: data.status
                    });
                return Promise.resolve(callback(undefined, {
                                statusCode: 200,
                                body: body
                              }, undefined));
              }).catch(function (err) {
              console.log("server Error Json", err);
              var body = JSON.stringify({
                    joke: err,
                    count: jokeCount.count,
                    status: 500
                  });
              return Promise.resolve(callback(undefined, {
                              statusCode: 500,
                              body: body
                            }, undefined));
            });
}

export {
  decodePostBody ,
  decodeFetchResult ,
  handler ,
}
/*  Not a pure module */

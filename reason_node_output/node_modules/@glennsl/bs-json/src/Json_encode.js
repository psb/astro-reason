// Generated by Melange
'use strict';

var Curry = require("melange.runtime/curry.js");
var Js_dict = require("melange.belt/./js_dict.js");
var Caml_array = require("melange.runtime/caml_array.js");
var Caml_option = require("melange.runtime/caml_option.js");
var Stdlib__List = require("melange/./list.js");
var Stdlib__Array = require("melange/./array.js");
var Stdlib__String = require("melange/./string.js");

function $$char(c) {
  return Stdlib__String.make(1, c);
}

function date(d) {
  return d.toJSON();
}

function nullable(encode, v) {
  if (v !== undefined) {
    return Curry._1(encode, Caml_option.valFromOption(v));
  } else {
    return null;
  }
}

function withDefault(d, encode, v) {
  if (v !== undefined) {
    return Curry._1(encode, Caml_option.valFromOption(v));
  } else {
    return d;
  }
}

function dict(encode, d) {
  var pairs = Js_dict.entries(d);
  return Js_dict.fromArray(Stdlib__Array.map((function (param) {
                    return [
                            param[0],
                            Curry._1(encode, param[1])
                          ];
                  }), pairs));
}

var object_ = Js_dict.fromList;

var array = Stdlib__Array.map;

function list(encode, l) {
  if (!l) {
    return [];
  }
  var a = Caml_array.make(Stdlib__List.length(l), Curry._1(encode, l.hd));
  var _i = 1;
  var _param = l.tl;
  while(true) {
    var param = _param;
    var i = _i;
    if (!param) {
      return a;
    }
    a[i] = Curry._1(encode, param.hd);
    _param = param.tl;
    _i = i + 1 | 0;
    continue ;
  };
}

function pair(encodeA, encodeB, param) {
  return [
          Curry._1(encodeA, param[0]),
          Curry._1(encodeB, param[1])
        ];
}

function tuple3(encodeA, encodeB, encodeC, param) {
  return [
          Curry._1(encodeA, param[0]),
          Curry._1(encodeB, param[1]),
          Curry._1(encodeC, param[2])
        ];
}

function tuple4(encodeA, encodeB, encodeC, encodeD, param) {
  return [
          Curry._1(encodeA, param[0]),
          Curry._1(encodeB, param[1]),
          Curry._1(encodeC, param[2]),
          Curry._1(encodeD, param[3])
        ];
}

var tuple2 = pair;

exports.$$char = $$char;
exports.date = date;
exports.nullable = nullable;
exports.withDefault = withDefault;
exports.pair = pair;
exports.tuple2 = tuple2;
exports.tuple3 = tuple3;
exports.tuple4 = tuple4;
exports.dict = dict;
exports.object_ = object_;
exports.array = array;
exports.list = list;
/* No side effect */

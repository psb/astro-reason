// Generated by Melange

import * as Curry from "melange.runtime/curry.js";
import * as Js_dict from "melange.belt/./js_dict.js";
import * as Caml_array from "melange.runtime/caml_array.js";
import * as Caml_option from "melange.runtime/caml_option.js";
import * as Stdlib__List from "melange/./list.js";
import * as Stdlib__Array from "melange/./array.js";
import * as Stdlib__String from "melange/./string.js";

function $$char(c) {
  return Stdlib__String.make(1, c);
}

function date(d) {
  return d.toJSON();
}

function nullable(encode, v) {
  if (v !== undefined) {
    return Curry._1(encode, Caml_option.valFromOption(v));
  } else {
    return null;
  }
}

function withDefault(d, encode, v) {
  if (v !== undefined) {
    return Curry._1(encode, Caml_option.valFromOption(v));
  } else {
    return d;
  }
}

function dict(encode, d) {
  var pairs = Js_dict.entries(d);
  return Js_dict.fromArray(Stdlib__Array.map((function (param) {
                    return [
                            param[0],
                            Curry._1(encode, param[1])
                          ];
                  }), pairs));
}

var object_ = Js_dict.fromList;

var array = Stdlib__Array.map;

function list(encode, l) {
  if (!l) {
    return [];
  }
  var a = Caml_array.make(Stdlib__List.length(l), Curry._1(encode, l.hd));
  var _i = 1;
  var _param = l.tl;
  while(true) {
    var param = _param;
    var i = _i;
    if (!param) {
      return a;
    }
    a[i] = Curry._1(encode, param.hd);
    _param = param.tl;
    _i = i + 1 | 0;
    continue ;
  };
}

function pair(encodeA, encodeB, param) {
  return [
          Curry._1(encodeA, param[0]),
          Curry._1(encodeB, param[1])
        ];
}

function tuple3(encodeA, encodeB, encodeC, param) {
  return [
          Curry._1(encodeA, param[0]),
          Curry._1(encodeB, param[1]),
          Curry._1(encodeC, param[2])
        ];
}

function tuple4(encodeA, encodeB, encodeC, encodeD, param) {
  return [
          Curry._1(encodeA, param[0]),
          Curry._1(encodeB, param[1]),
          Curry._1(encodeC, param[2]),
          Curry._1(encodeD, param[3])
        ];
}

var tuple2 = pair;

export {
  $$char ,
  date ,
  nullable ,
  withDefault ,
  pair ,
  tuple2 ,
  tuple3 ,
  tuple4 ,
  dict ,
  object_ ,
  array ,
  list ,
}
/* No side effect */
